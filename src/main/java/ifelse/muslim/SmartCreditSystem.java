package ifelse.muslim;

import java.util.Scanner;

public class SmartCreditSystem{

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String clientName = getClientName(scanner);

        if (hasCreditInAnotherBank(clientName)) {
            System.out.println("üö´ –ö–µ—á–∏—Ä–µ—Å–∏–∑, —Å–∏–∑–¥–∏–Ω –±–∞—à–∫–∞ –±–∞–Ω–∫—Ç–∞–Ω –∞–ª–≥–∞–Ω –∫—Ä–µ–¥–∏—Ç–∏“£–∏–∑ –±–∞—Ä. –ñ–∞“£—ã –Ω–∞—Å—ã—è –±–µ—Ä–∏–ª–±–µ–π—Ç.");
            return;
        }

        int age = getAge(scanner);
        if (age < 21 || age > 66) {
            System.out.println("üö´ –ñ–∞—à—ã“£—ã–∑ 21 –º–µ–Ω–µ–Ω 66 –∞—Ä–∞—Å—ã–Ω–¥–∞ –±–æ–ª—É—à—É –∫–µ—Ä–µ–∫.");
            System.out.println("‚ùå‚ùå");
            return;
        }

        double income = getIncome(scanner);
        if (income < 40000) {
            System.out.println("üö´ –ê–π–ª—ã–∫ –∫–∏—Ä–µ—à–µ“£–∏–∑ 40,000 —Å–æ–º–¥–æ–Ω –∂–æ–≥–æ—Ä—É –±–æ–ª—É—à—É –∫–µ—Ä–µ–∫.");
            System.out.println("‚ùå");
            return;
        }

        int experience = getExperience(scanner);
        if (experience < 2) {
            System.out.println("üö´ –ò—à —Ç–∞–∂—Ä—ã–π–±–∞“£—ã–∑ –∂–µ—Ç–∏—à—Å–∏–∑.");
            System.out.println("‚ùå");
            return;
        }

        String creditHistory = getCreditHistory(scanner);
        if (!creditHistory.equalsIgnoreCase("–æ–æ–±–∞")) {
            System.out.println("üö´ –ö—Ä–µ–¥–∏—Ç—Ç–∏–∫ —Ç–∞—Ä—ã—Ö—ã“£—ã–∑ –∂–∞–∫—à—ã —ç–º–µ—Å.");
            System.out.println("‚ùå");
            return;
        }

        double otherDebt = getDebtInfo(scanner);

        double monthlyPayment = calculateLoan(scanner);

        double monthlyOtherDebt = otherDebt / 12;
        double totalMonthlyDebt = monthlyOtherDebt + monthlyPayment;

        if (totalMonthlyDebt > income) {
            System.out.println("üö´ –ê–π–ª—ã–∫ –∫–∏—Ä–µ—à–µ“£–∏–∑ –±–∞—à–∫–∞ –∫–∞—Ä—ã–∑–¥–∞—Ä –∂–∞–Ω–∞ –∂–∞“£—ã –∫—Ä–µ–¥–∏—Ç “Ø—á“Ø–Ω –∂–µ—Ç–∏—à—Å–∏–∑.");
            System.out.println("‚ùå");
            return;
        }

        System.out.println("üéâ –ö—É—Ç—Ç—É–∫—Ç–∞–π–±—ã–∑! –ö—Ä–µ–¥–∏—Ç –±–µ—Ä–∏–ª–µ—Ç.");
        scanner.close();
    }

    // -------------------- Client Information --------------------

    private static String getClientName(Scanner scanner) {
        System.out.print("üë§ –ê—Ç—ã-–∂”©–Ω“Ø“£“Ø–∑–¥“Ø –∂–∞–∑—ã“£—ã–∑: ");
        return scanner.nextLine();
    }

    private static boolean hasCreditInAnotherBank(String clientName) {
        return clientName.equalsIgnoreCase("–°–∞–∏–¥–æ–≤ –ú—É—Å–ª–∏–º") ||
                clientName.equalsIgnoreCase("–ú—É—Å–ª–∏–º –°–∞–∏–¥–æ–≤") ||
                clientName.equalsIgnoreCase("–ê–ª—ã–±–∞–µ–≤ –¢—É—Ä–∞—Ç") ||
                clientName.equalsIgnoreCase("–¢—É—Ä–∞—Ç –ê–ª—ã–±–∞–µ–≤") ||
                clientName.equalsIgnoreCase("–¢–æ–∫—Ç–∞–∫—É–Ω–æ–≤ –ê–∑–∞–º–∞—Ç") ||
                clientName.equalsIgnoreCase("–ê–∑–∞–º–∞—Ç –¢–æ–∫—Ç–∞–∫—É–Ω–æ–≤");
    }

    // -------------------- User Input Methods --------------------

    private static int getAge(Scanner scanner) {
        System.out.print("üßì –ñ–∞—à—ã“£—ã–∑–¥—ã –∫–∏—Ä–≥–∏–∑–∏“£–∏–∑: ");
        return scanner.nextInt();
    }

    private static double getIncome(Scanner scanner) {
        System.out.print("üí∞ –ê–π–ª—ã–∫ –∫–∏—Ä–µ—à–µ“£–∏–∑–¥–∏ –∫–∏—Ä–≥–∏–∑–∏“£–∏–∑: ");
        return scanner.nextDouble();
    }

    private static int getExperience(Scanner scanner) {
        System.out.print("üìÜ –ò—à —Ç–∞–∂—Ä—ã–π–±–∞“£—ã–∑–¥—ã –∂—ã–ª –º–µ–Ω–µ–Ω: ");
        return scanner.nextInt();
    }

    private static String getCreditHistory(Scanner scanner) {
        System.out.print("üìä –ö—Ä–µ–¥–∏—Ç—Ç–∏–∫ —Ç–∞—Ä—ã—Ö—ã“£—ã–∑ –∂–∞–∫—à—ã–±—ã? (–æ–æ–±–∞/–∂–æ–∫): ");
        scanner.nextLine(); // cleanup
        return scanner.nextLine();
    }

    private static double getDebtInfo(Scanner scanner) {
        System.out.print("üí≥ –ë–∞—à–∫–∞ –∫–∞—Ä—ã–∑—ã“£—ã–∑ –±–∞—Ä–±—ã? (–æ–æ–±–∞/–∂–æ–∫): ");
        String hasDebt = scanner.nextLine();
        if (hasDebt.equalsIgnoreCase("–æ–æ–±–∞")) {
            System.out.print("–ö–∞—Ä—ã–∑–¥—ã–Ω —Å—É–º–º–∞—Å—ã–Ω –∫–∏—Ä–≥–∏–∑–∏“£–∏–∑: ");
            double otherDebt = scanner.nextDouble();
            scanner.nextLine(); // cleanup
            return otherDebt;
        }
        return 0;
    }

    // -------------------- Loan Calculation --------------------

    private static double calculateLoan(Scanner scanner) {
        System.out.print("–ö–∞–Ω—á–∞ —Å—É–º–º–∞–¥–∞–≥—ã –∫—Ä–µ–¥–∏—Ç –∫–µ—Ä–µ–∫? (—Å–æ–º): ");
        double loanAmount = scanner.nextDouble();

        double interestRate = 20.0;
        System.out.println("üè¶ –ë–∞–Ω–∫ —Ç–∞—Ä–∞–±—ã–Ω–∞–Ω –±–µ—Ä–∏–ª–≥–µ–Ω –∂—ã–ª–¥—ã–∫ –ø–∞–π—ã–∑: " + interestRate + "%");

        System.out.print("–ö—Ä–µ–¥–∏—Ç –º”©”©–Ω”©—Ç“Ø (–∞–π): ");
        int months = scanner.nextInt();

        double totalInterest = loanAmount * (interestRate / 100);
        double monthlyPayment = (loanAmount + totalInterest) / months;

        System.out.println("üìÑ –ñ–∞–ª–ø—ã –ø–∞–π—ã–∑: " + totalInterest + " —Å–æ–º");
        System.out.println("üí≥ –ê–π —Å–∞–π—ã–Ω —Ç”©–ª”©–º“Ø“£“Ø–∑: " + monthlyPayment + " —Å–æ–º");

        return monthlyPayment;
    }
}
